server:
  port: 8120
spring:
  application:
    name: pika-logistics
  mvc:
    servlet:
      load-on-startup: 0
  rabbitmq:
    host: ${RABBIT_MQ_HOST:127.0.0.1}
    port: ${RABBIT_MQ_PORT:5672}
    username: ${RABBIT_MQ_USERNAME:root}
    password: ${RABBIT_MQ_PASSWORD:123456}
  redis:
    host: ${REDIS_HOST:127.0.0.1}
    port: 6379
    password: ${REDIS_PASSWORD:123456}
    timeout: 5000ms
    lettuce:
      # 关闭超时时间
      shutdown-timeout: 100
      pool:
        # 连接池最大连接数
        max-active: 300
        # 连接池最大阻塞等待时间
        max-wait: 10000
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池中的最小空闲连接
        min-idle: 0
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://${DATASOURCE_HOST:127.0.0.1}:3306/pika_logistics?characterEncoding=UTF-8&useUnicode=true&useSSL=false&serverTimezoneGMT%2b8
      username: ${DATASOURCE_USERNAME:root}
      password: ${DATASOURCE_PASSWORD:123456}
  cloud:
    nacos:
      discovery:
        server-addr: ${REGISTER_HOST:127.0.0.1}:${REGISTER_PORT:8848}
        namespace: ${REGISTER_NAMESPACE:5a0187d7-9f8f-445a-a3bf-e17e11457e4d}
        group: ${REGISTER_GROUP:PIKA}
        namingLoadCacheAtStart: true
        username: ${REGISTER_USERNAME:nacos} # 支持账号密码认证
        password: ${REGISTER_PASSWORD:nacos}
      config:
        server-addr: ${REGISTER_HOST:127.0.0.1}:${REGISTER_PORT:8848}
        prefix: ${spring.application.name}
        file-extension: yml
        namespace: ${REGISTER_NAMESPACE:5a0187d7-9f8f-445a-a3bf-e17e11457e4d}
        group: ${REGISTER_GROUP:PIKA}
        username: ${REGISTER_USERNAME:nacos} # 支持账号密码认证
        password: ${REGISTER_PASSWORD:nacos}
    sentinel:
      transport:
        dashboard: localhost:8080 #配置Sentinel dashboard地址
        port: 8719
      datasource:
        ds1:
          # 将限流规则持久化进nacos配置中心
          nacos:
            server-addr: ${REGISTER_HOST:127.0.0.1}:${REGISTER_PORT:8848}
            dataId: pika-logistics-sentinel
            groupId: PIKA
            data-type: json
            rule-type: flow
            username: ${REGISTER_USERNAME:nacos} # 支持账号密码认证
            password: ${REGISTER_PASSWORD:nacos}
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8

# ribbon负载均衡
ribbon:
  # Ribbon的默认加载策略是懒加载。当第一次访问的时候，不仅会发送访问请求，还有初始化相关的服务。 设置饥饿加载相关服务
  eager-load:
    enabled: true
    clients:
      - pika-trade

# Feign
feign:
  # sentinel对Feign的支持
  sentinel:
    enabled: true

# mybatis-plus
mybatis-plus:
  # config-location:
  mapper-locations: classpath:mapper/*Mapper.xml
  # 实体扫描，多个package用逗号或者分号分隔
  type-aliases-package: com.wenlincheng.pika.logistics.entity.po
  configuration:
    # 驼峰下划线转换
    map-underscore-to-camel-case: true
    cache-enabled: false
    call-setters-on-nulls: true
  global-config:
    banner: false
    # 数据库大写下划线转换
    #capital-mode: true
    # 序列接口实现类配置
    #key-generator: com.baomidou.springboot.xxx
    # 数据库相关配置
    db-config:
      # 主键类型  AUTO:"数据库ID自增", INPUT:"用户输入ID",ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
      id-type: AUTO
      capital-mode: true
      # 逻辑删除配置
      logic-delete-value: 1
      logic-not-delete-value: 0

# 文档
swagger:
  enabled: true
  basePackage:
  basePath:
  excludePath:
  title: ${spring.application.name}
  description:
  version: 0.0.1
  license:
  licenseUrl:
  termsOfServiceUrl:
  host:
  contact:
    name: Pikaman
    url: https://www.wenlincheng.com
    email: wenlcmax@gmail.com

# 代码生成
gen:
  # 项目名
  serverName: ${spring.application.name}
  # 自定义包路径
  packagePath: com.wenlincheng.pika
  # 包名
  packageName: logistics
  # 数据库表名
  tableNames:
    - sys_logs
  # 设置作者
  author: Pikaman
  # 数据库
  database:
    url: ${spring.datasource.druid.url}
    username: ${spring.datasource.druid.username}
    password: ${spring.cloud.nacos.config.password}