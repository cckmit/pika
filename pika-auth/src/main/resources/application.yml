server:
  port: 8110
spring:
  profiles:
    active: dev
  mvc:
    servlet:
      load-on-startup: 0
  rabbitmq:
    host: ${RABBIT_MQ_HOST:127.0.0.1}
    port: ${RABBIT_MQ_PORT:5672}
    username: ${RABBIT_MQ_USERNAME:root}
    password: ${RABBIT_MQ_PASSWORD:123456}
  redis:
    host: ${REDIS_HOST:127.0.0.1}
    port: 6379
    password: ${REDIS_PASSWORD:123456}
    lettuce:
      pool:
        max-active: 300
  cloud:
    nacos:
      discovery:
        server-addr: ${REGISTER_HOST:127.0.0.1}:${REGISTER_PORT:8848}
        namespace: ${REGISTER_NAMESPACE:5a0187d7-9f8f-445a-a3bf-e17e11457e4d}
        group: ${REGISTER_GROUP:PIKA}
        namingLoadCacheAtStart: true
        username: ${REGISTER_USERNAME:nacos}
        password: ${REGISTER_PASSWORD:nacos}
    sentinel:
      transport:
        dashboard: ${SENTINEL_DASHBOARD_HOST:127.0.0.1}:${SENTINEL_DASHBOARD_PORT:8858}
        port: ${SENTINEL_PORT:8719}
      datasource:
        ds1:
          # 将限流规则持久化进nacos配置中心
          nacos:
            server-addr: ${REGISTER_HOST:127.0.0.1}:${REGISTER_PORT:8848}
            dataId: pika-auth-sentinel
            groupId: PIKA
            data-type: json
            rule-type: flow
            username: ${REGISTER_USERNAME:nacos}
            password: ${REGISTER_PASSWORD:nacos}
    # Stream
    stream:
      # RocketMQ
      rocketmq:
        binder:
          name-server: ${ROCKET_MQ_HOST:127.0.0.1}:${ROCKET_MQ_PORT:9876}
        bindings:
          output1:
            producer:
              group: binder-group
              sync: true
          output2:
            producer:
              group: myTxProducerGroup
              transactional: true
          output3:
            producer:
              group: pull-binder-group
      # Binding
      bindings:
        output1:
          content-type: application/json
          destination: test-topic
        output2:
          content-type: application/json
          destination: TransactionTopic
        output3:
          content-type: text/plain
          destination: pull-topic
  # 序列化
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8

# ribbon负载均衡
ribbon:
  # Ribbon的默认加载策略是懒加载。当第一次访问的时候，不仅会发送访问请求，还有初始化相关的服务。 设置饥饿加载相关服务
  eager-load:
    enabled: true
    clients: pika-upms

# Feign
feign:
  # sentinel对Feign的支持
  sentinel:
    enabled: true

# JWT 配置
jwt:
  # 服务端根据 SigningKey 生成 token
  signingKey: VCsGI5YF+QH7uQOK5dbI0BGpskwRF8pPJr/MLmjeUPWPVgyIuREAQCvfo3nylgpz8DNuGFZ5w8Jjs5CSTT1+VQ==
  # token 的有效时间
  tokenExpiration: 36000
  refreshTokenExpiration: 36000

# Security 需要放行的路径
ignored:
  uris:
    - /login/v1
    - /auth/token/**
    - /auth/logout

security:
  # 登录失败次数限制
  loginTimeLimit: 5
  # 多少分钟后可重试
  loginAfterTime: 2

logstash:
  host: ${LOGSTASH_HOST:127.0.0.1}
  port: ${LOGSTASH_PORT:5044}