server:
  port: 8130
spring:
  mvc:
    servlet:
      load-on-startup: 0
  redis:
    host: ${REDIS_HOST:127.0.0.1}
    port: 6379
    password: ${REDIS_PASSWORD:123456}
    timeout: 5000ms
    lettuce:
      # 关闭超时时间
      shutdown-timeout: 100
      pool:
        # 连接池最大连接数
        max-active: 300
        # 连接池最大阻塞等待时间
        max-wait: 10000
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池中的最小空闲连接
        min-idle: 0
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DATASOURCE_HOST:127.0.0.1}:3306/pika_message?characterEncoding=UTF-8&useUnicode=true&useSSL=false&serverTimezoneGMT%2b8
    username: ${DATASOURCE_USERNAME:root}
    password: ${DATASOURCE_PASSWORD:123456}
    # 数据库连接池
    druid:
      filters: stat
      filter:
        stat:
          log-slow-sql: true
          slow-sql-millis: 2000
      maxActive: 20
      initialSize: 5
      maxWait: 60000
      minIdle: 1
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 300000
      validationQuery: select 'x'
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true
      maxOpenPreparedStatements: 20
      # Druid StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        reset-enable: true
        login-username: admin
        login-password: admin
        allow:
        deny:
      # Druid WebStatFilter配置
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: .js,*.gif,*.png,*.jpg,*.html,*.js,*.css,*.ico,/druid/*
  cloud:
    # 注册中心
    nacos:
      discovery:
        server-addr: ${REGISTER_HOST:127.0.0.1}:${REGISTER_PORT:8848}
        namespace: ${REGISTER_NAMESPACE:5a0187d7-9f8f-445a-a3bf-e17e11457e4d}
        group: ${REGISTER_GROUP:PIKA}
        namingLoadCacheAtStart: true
        username: ${REGISTER_USERNAME:nacos}
        password: ${REGISTER_PASSWORD:nacos}
    # 熔断降级
    sentinel:
      transport:
        dashboard: ${SENTINEL_DASHBOARD_HOST:127.0.0.1}:${SENTINEL_DASHBOARD_PORT:8858}
        port: ${SENTINEL_PORT:8719}
      datasource:
        ds1:
          # 将限流规则持久化进nacos配置中心
          nacos:
            server-addr: ${REGISTER_HOST:127.0.0.1}:${REGISTER_PORT:8848}
            dataId: pika-message-sentinel
            groupId: PIKA
            data-type: json
            rule-type: flow
            username: ${REGISTER_USERNAME:nacos}
            password: ${REGISTER_PASSWORD:nacos}

    # Stream
    stream:
      # RocketMQ
      rocketmq:
        binder:
          name-server: ${ROCKET_MQ_HOST:127.0.0.1}:${ROCKET_MQ_PORT:9876}
        bindings:
          output1:
            producer:
              group: binder-group
              sync: true
          output2:
            producer:
              group: myTxProducerGroup
              transactional: true
          output3:
            producer:
              group: pull-binder-group
      # Binding
      bindings:
        output1:
          content-type: application/json
          destination: test-topic
        output2:
          content-type: application/json
          destination: TransactionTopic
        output3:
          content-type: text/plain
          destination: pull-topic
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  elasticsearch:
    rest:
      username:
      password:
      uris:
        - http://127.0.0.1:9200
# Dubbo
dubbo:
  protocol:
    id: dubbo
    name: dubbo
    port: -1
  scan:
    base-packages: com.wenlincheng.pika.message.service

# ribbon
ribbon:
  # Ribbon的默认加载策略是懒加载。当第一次访问的时候，不仅会发送访问请求，还有初始化相关的服务。 设置饥饿加载相关服务
  eager-load:
    enabled: true
    clients:
      - pika-trade
      - pika-upms
      - pika-auth

# Feign
feign:
  # sentinel对Feign的支持
  sentinel:
    enabled: true

# 微服务监控
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: '*'

# mybatis-plus
mybatis-plus:
  # config-location:
  mapper-locations: classpath:mapper/*Mapper.xml
  # 实体扫描，多个package用逗号或者分号分隔
  type-aliases-package: com.wenlincheng.pika.message.entity.po
  # 配置枚举 支持通配符 * 或者 ; 分割
  #type-enums-package: com.wenlincheng.pika.**.enums
  configuration:
    #default-enum-type-handler: org.apache.ibatis.type.EnumOrdinalTypeHandler
    # 驼峰下划线转换
    map-underscore-to-camel-case: true
    cache-enabled: false
    call-setters-on-nulls: true
  global-config:
    banner: false
    # 数据库大写下划线转换
    #capital-mode: true
    # 序列接口实现类配置
    #key-generator: com.baomidou.springboot.xxx
    # 数据库相关配置
    db-config:
      # 主键类型
      id-type: ASSIGN_ID
      capital-mode: true
      # 逻辑删除配置
      logic-delete-value: 1
      logic-not-delete-value: 0

# sms
sms:
  regionId: cn-hangzhou
  accessKey:
  accessSecret:
  version: 2017-05-25
  domain: dysmsapi.aliyuncs.com
# email
email:
  smtpUser:
  smtpPassword:
  securityType:
  smtpHost:
  smtpPort:

# Leaf
leaf:
  name: ${spring.application.name}
  # segment
  segment:
    enable: true
    url: jdbc:mysql://${DATASOURCE_HOST:127.0.0.1}:3306/pika_upms?characterEncoding=UTF-8&useUnicode=true&useSSL=false&serverTimezoneGMT%2b8
    username: ${DATASOURCE_USERNAME:root}
    password: ${DATASOURCE_PASSWORD:123456}
  # snowflake
  snowflake:
    enable: true
    address: ${ZOOKEEPER_HOST:127.0.0.1}
    port: ${ZOOKEEPER_PORT:2181}

# 文档
swagger:
  enabled: true
  basePackage:
  basePath:
  excludePath:
  title: ${spring.application.name}
  description:
  version: 0.0.1
  license:
  licenseUrl:
  termsOfServiceUrl:
  host:
  contact:
    name: Pikaman
    url: https://www.wenlincheng.com
    email: wenlcmax@gmail.com

# 代码生成
gen:
  # 项目名
  serverName: ${spring.application.name}/${spring.application.name}-core
  # 自定义包路径
  packagePath: com.wenlincheng.pika
  # 包名
  packageName: item
  # 数据库表名
  tableNames:
    - message
  # 设置作者
  author: Pikaman
  # 数据库
  database:
    url: ${spring.datasource.druid.url}
    username: ${spring.datasource.druid.username}
    password: ${spring.cloud.nacos.config.password}